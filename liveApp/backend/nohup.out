Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'users' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "users" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "users"  ADD UNIQUE ("email");ALTER TABLE "users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "users" ALTER COLUMN "password_hash" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "password_hash" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "password_hash" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "users" ALTER COLUMN "role_id" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "role_id" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "role_id" TYPE INTEGER;
Executing (default): ALTER TABLE "users" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'companies'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'companies' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'companies' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "companies" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP NOT NULL;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "companies" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'companies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'products'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'products' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'products' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "products" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "sku" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "sku" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "sku" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "price" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "price" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "cost" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "cost" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "cost" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "quantityInStock" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "quantityInStock" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "quantityInStock" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "reorderLevel" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "reorderLevel" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "reorderLevel" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "categoryId" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "categoryId" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "categoryId" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "image" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "products" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'products' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'invoices'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_invoices_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'invoices' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'invoices' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" DROP DEFAULT;ALTER TABLE "invoices"  ADD UNIQUE ("invoiceNumber");ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_invoices_status" AS ENUM(''Pending'', ''Paid'', ''Cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "invoices" ALTER COLUMN "status" TYPE "public"."enum_invoices_status" USING ("status"::"public"."enum_invoices_status");
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'invoices' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'quotations'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_quotations_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'quotations' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'quotations' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" DROP DEFAULT;ALTER TABLE "quotations"  ADD UNIQUE ("quotationNumber");ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_quotations_status" AS ENUM(''Pending'', ''Accepted'', ''Rejected''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "quotations" ALTER COLUMN "status" TYPE "public"."enum_quotations_status" USING ("status"::"public"."enum_quotations_status");
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'quotations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'staff'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'staff' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'staff' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "staff" ALTER COLUMN "firstName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "firstName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "firstName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "lastName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "lastName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "lastName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "staff"  ADD UNIQUE ("email");ALTER TABLE "staff" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "position" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "position" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "position" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'staff' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'company_docs'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'company_docs' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'company_docs' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "type" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "type" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "size" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "size" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "size" TYPE INTEGER;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "category" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "category" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "category" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "description" TYPE TEXT;
(sequelize) Warning: PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead. 
>> Check: http://www.postgresql.org/docs/9.4/static/datatype.html
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "data" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "data" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "data" TYPE BYTEA;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'company_docs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tenders'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tenders_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tenders' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tenders' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP DEFAULT;ALTER TABLE "tenders"  ADD UNIQUE ("referenceNumber");ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" TYPE VARCHAR(255) ;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "deadline" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "deadline" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "deadline" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "status" SET DEFAULT 'open';DO 'BEGIN CREATE TYPE "public"."enum_tenders_status" AS ENUM(''open'', ''closed'', ''awarded''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tenders" ALTER COLUMN "status" TYPE "public"."enum_tenders_status" USING ("status"::"public"."enum_tenders_status");
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tenders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "services" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "services" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "services" ALTER COLUMN "price" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "price" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "services" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "services" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'logins'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'logins' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'logins' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "logins" DROP CONSTRAINT "logins_userId_fkey"
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "logins"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id");
Executing (default): ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "loginTime" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "ipAddress" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "userAgent" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'logins' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'supplier/resellers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'supplier/resellers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'supplier/resellers' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'supplier/resellers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'profiles'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'profiles' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'profiles' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "profiles" DROP CONSTRAINT "profiles_userId_fkey"
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "profiles"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'profiles' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'SupplierProducts'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'SupplierProducts' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'SupplierProducts' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'SupplierProducts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
✅ All tables synced
🚀 Server running on port 5000
$2b$10$YAxpwuaO8KFuFGAPYzIWLe9xxztp6KB80uKdAcIYt4L79821kVEcC
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'users' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "users" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "users"  ADD UNIQUE ("email");ALTER TABLE "users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "users" ALTER COLUMN "password_hash" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "password_hash" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "password_hash" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "users" ALTER COLUMN "role_id" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "role_id" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "role_id" TYPE INTEGER;
Executing (default): ALTER TABLE "users" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'companies'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'companies' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'companies' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "companies" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP NOT NULL;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "companies" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'companies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'products'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'products' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'products' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "products" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "sku" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "sku" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "sku" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "price" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "price" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "cost" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "cost" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "cost" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "quantityInStock" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "quantityInStock" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "quantityInStock" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "reorderLevel" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "reorderLevel" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "reorderLevel" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "categoryId" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "categoryId" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "categoryId" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "image" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "products" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'products' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'invoices'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_invoices_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'invoices' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'invoices' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" DROP DEFAULT;ALTER TABLE "invoices"  ADD UNIQUE ("invoiceNumber");ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_invoices_status" AS ENUM(''Pending'', ''Paid'', ''Cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "invoices" ALTER COLUMN "status" TYPE "public"."enum_invoices_status" USING ("status"::"public"."enum_invoices_status");
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'invoices' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'quotations'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_quotations_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'quotations' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'quotations' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" DROP DEFAULT;ALTER TABLE "quotations"  ADD UNIQUE ("quotationNumber");ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_quotations_status" AS ENUM(''Pending'', ''Accepted'', ''Rejected''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "quotations" ALTER COLUMN "status" TYPE "public"."enum_quotations_status" USING ("status"::"public"."enum_quotations_status");
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'quotations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'staff'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'staff' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'staff' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "staff" ALTER COLUMN "firstName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "firstName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "firstName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "lastName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "lastName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "lastName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "staff"  ADD UNIQUE ("email");ALTER TABLE "staff" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "position" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "position" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "position" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'staff' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'company_docs'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'company_docs' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'company_docs' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "type" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "type" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "size" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "size" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "size" TYPE INTEGER;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "category" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "category" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "category" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "description" TYPE TEXT;
(sequelize) Warning: PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead. 
>> Check: http://www.postgresql.org/docs/9.4/static/datatype.html
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "data" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "data" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "data" TYPE BYTEA;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'company_docs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tenders'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tenders_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tenders' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tenders' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP DEFAULT;ALTER TABLE "tenders"  ADD UNIQUE ("referenceNumber");ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" TYPE VARCHAR(255) ;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "deadline" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "deadline" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "deadline" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "status" SET DEFAULT 'open';DO 'BEGIN CREATE TYPE "public"."enum_tenders_status" AS ENUM(''open'', ''closed'', ''awarded''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tenders" ALTER COLUMN "status" TYPE "public"."enum_tenders_status" USING ("status"::"public"."enum_tenders_status");
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tenders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "services" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "services" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "services" ALTER COLUMN "price" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "price" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "services" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "services" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'logins'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'logins' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'logins' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "logins" DROP CONSTRAINT "logins_userId_fkey"
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "logins"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id");
Executing (default): ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "loginTime" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "ipAddress" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "userAgent" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'logins' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'supplier/resellers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'supplier/resellers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'supplier/resellers' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'supplier/resellers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'profiles'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'profiles' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'profiles' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "profiles" DROP CONSTRAINT "profiles_userId_fkey"
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "profiles"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'profiles' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'SupplierProducts'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'SupplierProducts' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'SupplierProducts' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'SupplierProducts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
✅ All tables synced
🚀 Server running on port 5000
$2b$10$0FwN2pQRo2vjLnODqQRQG.Btqr3HUEmHns1bkqXVLLiEaHZaMKXUu
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'users' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "users" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "users"  ADD UNIQUE ("email");ALTER TABLE "users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "users" ALTER COLUMN "password_hash" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "password_hash" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "password_hash" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "users" ALTER COLUMN "role_id" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "role_id" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "role_id" TYPE INTEGER;
Executing (default): ALTER TABLE "users" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'companies'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'companies' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'companies' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "companies" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP NOT NULL;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "companies" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'companies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'products'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'products' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'products' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "products" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "sku" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "sku" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "sku" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "price" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "price" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "cost" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "cost" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "cost" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "quantityInStock" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "quantityInStock" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "quantityInStock" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "reorderLevel" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "reorderLevel" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "reorderLevel" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "categoryId" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "categoryId" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "categoryId" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "image" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "products" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'products' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'invoices'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_invoices_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'invoices' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'invoices' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" DROP DEFAULT;ALTER TABLE "invoices"  ADD UNIQUE ("invoiceNumber");ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_invoices_status" AS ENUM(''Pending'', ''Paid'', ''Cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "invoices" ALTER COLUMN "status" TYPE "public"."enum_invoices_status" USING ("status"::"public"."enum_invoices_status");
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'invoices' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'quotations'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_quotations_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'quotations' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'quotations' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" DROP DEFAULT;ALTER TABLE "quotations"  ADD UNIQUE ("quotationNumber");ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_quotations_status" AS ENUM(''Pending'', ''Accepted'', ''Rejected''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "quotations" ALTER COLUMN "status" TYPE "public"."enum_quotations_status" USING ("status"::"public"."enum_quotations_status");
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'quotations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'staff'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'staff' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'staff' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "staff" ALTER COLUMN "firstName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "firstName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "firstName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "lastName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "lastName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "lastName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "staff"  ADD UNIQUE ("email");ALTER TABLE "staff" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "position" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "position" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "position" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'staff' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'company_docs'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'company_docs' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'company_docs' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "type" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "type" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "size" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "size" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "size" TYPE INTEGER;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "category" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "category" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "category" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "description" TYPE TEXT;
(sequelize) Warning: PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead. 
>> Check: http://www.postgresql.org/docs/9.4/static/datatype.html
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "data" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "data" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "data" TYPE BYTEA;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'company_docs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tenders'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tenders_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tenders' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tenders' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP DEFAULT;ALTER TABLE "tenders"  ADD UNIQUE ("referenceNumber");ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" TYPE VARCHAR(255) ;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "deadline" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "deadline" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "deadline" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "status" SET DEFAULT 'open';DO 'BEGIN CREATE TYPE "public"."enum_tenders_status" AS ENUM(''open'', ''closed'', ''awarded''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tenders" ALTER COLUMN "status" TYPE "public"."enum_tenders_status" USING ("status"::"public"."enum_tenders_status");
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tenders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "services" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "services" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "services" ALTER COLUMN "price" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "price" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "services" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "services" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'logins'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'logins' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'logins' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "logins" DROP CONSTRAINT "logins_userId_fkey"
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "logins"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id");
Executing (default): ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "loginTime" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "ipAddress" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "userAgent" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'logins' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'supplier/resellers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'supplier/resellers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'supplier/resellers' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'supplier/resellers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'profiles'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'profiles' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'profiles' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "profiles" DROP CONSTRAINT "profiles_userId_fkey"
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "profiles"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'profiles' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'SupplierProducts'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'SupplierProducts' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'SupplierProducts' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'SupplierProducts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
✅ All tables synced
🚀 Server running on port 5000
$2b$10$pBbRS2htJKUvWpk9R/L2wOxau3n93J8lU9iaFo0/C/9U/pvqbgIfa
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'users' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "users" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "users"  ADD UNIQUE ("email");ALTER TABLE "users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "users" ALTER COLUMN "password_hash" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "password_hash" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "password_hash" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "users" ALTER COLUMN "role_id" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "role_id" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "role_id" TYPE INTEGER;
Executing (default): ALTER TABLE "users" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'companies'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'companies' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'companies' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "companies" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP NOT NULL;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "registrationNumber" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "companies" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "companies" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "companies" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "companies" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'companies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'products'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'products' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'products' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "products" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "sku" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "sku" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "sku" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "price" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "price" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "cost" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "cost" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "cost" TYPE FLOAT;
Executing (default): ALTER TABLE "products" ALTER COLUMN "quantityInStock" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "quantityInStock" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "quantityInStock" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "reorderLevel" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "reorderLevel" SET DEFAULT 0;ALTER TABLE "products" ALTER COLUMN "reorderLevel" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "categoryId" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "categoryId" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "categoryId" TYPE INTEGER;
Executing (default): ALTER TABLE "products" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "products" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "image" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "products" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "products" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "products" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "products" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'products' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'invoices'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_invoices_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'invoices' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'invoices' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" DROP DEFAULT;ALTER TABLE "invoices"  ADD UNIQUE ("invoiceNumber");ALTER TABLE "invoices" ALTER COLUMN "invoiceNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "invoices" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "invoices" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "invoices" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_invoices_status" AS ENUM(''Pending'', ''Paid'', ''Cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "invoices" ALTER COLUMN "status" TYPE "public"."enum_invoices_status" USING ("status"::"public"."enum_invoices_status");
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'invoices' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'quotations'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_quotations_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'quotations' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'quotations' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" DROP DEFAULT;ALTER TABLE "quotations"  ADD UNIQUE ("quotationNumber");ALTER TABLE "quotations" ALTER COLUMN "quotationNumber" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "dateIssued" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "dateIssued" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "expiryDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "totalAmount" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "totalAmount" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "status" SET DEFAULT 'Pending';DO 'BEGIN CREATE TYPE "public"."enum_quotations_status" AS ENUM(''Pending'', ''Accepted'', ''Rejected''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "quotations" ALTER COLUMN "status" TYPE "public"."enum_quotations_status" USING ("status"::"public"."enum_quotations_status");
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "quotations" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "quotations" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'quotations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'staff'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'staff' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'staff' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "staff" ALTER COLUMN "firstName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "firstName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "firstName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "lastName" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "lastName" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "lastName" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "staff"  ADD UNIQUE ("email");ALTER TABLE "staff" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "position" DROP NOT NULL;ALTER TABLE "staff" ALTER COLUMN "position" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "position" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "staff" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "staff" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "staff" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "staff" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'staff' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'company_docs'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'company_docs' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'company_docs' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "type" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "type" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "size" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "size" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "size" TYPE INTEGER;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "category" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "category" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "category" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "description" TYPE TEXT;
(sequelize) Warning: PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead. 
>> Check: http://www.postgresql.org/docs/9.4/static/datatype.html
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "data" DROP NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "data" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "data" TYPE BYTEA;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "company_docs" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'company_docs' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tenders'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tenders_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tenders' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tenders' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" DROP DEFAULT;ALTER TABLE "tenders"  ADD UNIQUE ("referenceNumber");ALTER TABLE "tenders" ALTER COLUMN "referenceNumber" TYPE VARCHAR(255) ;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "deadline" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "deadline" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "deadline" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "status" SET DEFAULT 'open';DO 'BEGIN CREATE TYPE "public"."enum_tenders_status" AS ENUM(''open'', ''closed'', ''awarded''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tenders" ALTER COLUMN "status" TYPE "public"."enum_tenders_status" USING ("status"::"public"."enum_tenders_status");
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tenders" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tenders" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tenders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "services" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "services" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "services" ALTER COLUMN "price" DROP NOT NULL;ALTER TABLE "services" ALTER COLUMN "price" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "price" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "services" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "services" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "services" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "services" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'logins'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'logins' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'logins' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "logins" DROP CONSTRAINT "logins_userId_fkey"
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "logins"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id");
Executing (default): ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "loginTime" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "loginTime" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "ipAddress" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "ipAddress" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP NOT NULL;ALTER TABLE "logins" ALTER COLUMN "userAgent" DROP DEFAULT;ALTER TABLE "logins" ALTER COLUMN "userAgent" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'logins' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'supplier/resellers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'supplier/resellers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'supplier/resellers' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "contactPerson" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "email" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "address" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "products_supplied" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "notes" TYPE TEXT;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "supplier/resellers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'supplier/resellers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'profiles'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'profiles' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'profiles' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "full_name" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "full_name" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "full_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "phone_number" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "phone_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "picture_url" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "picture_url" TYPE TEXT;
Executing (default): ALTER TABLE "profiles" DROP CONSTRAINT "profiles_userId_fkey"
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "profiles"  ADD FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "profiles" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "profiles" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'profiles' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'SupplierProducts'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'SupplierProducts' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'SupplierProducts' AND tc.table_catalog = 'Thaboera_db'
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "SupplierProducts" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'SupplierProducts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
✅ All tables synced
🚀 Server running on port 5000
$2b$10$.GgpboOf9hW/1PlGe7lNQePVrrBUlBXB1yKIFesCLUbkwpOk29tOa
